apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
  namespace: grafana
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - image: grafana/grafana:12.1.1
          imagePullPolicy: Always
          name: grafana
          env:
            - name: GF_AUTH_GENERIC_OAUTH_ENABLED
              value: "true"
            - name: GF_AUTH_GENERIC_OAUTH_NAME
              value: "SSO"
            - name: GF_AUTH_GENERIC_OAUTH_CLIENT_ID
              value: "YyUH2QICEMoZ6pFCGbrPLL1a8u1MUhF9pJUZcSDP"
            - name: GF_AUTH_GENERIC_OAUTH_SCOPES
              value: "openid email profile"
            - name: GF_AUTH_GENERIC_OAUTH_AUTH_URL
              value: "https://auth.gavriliu.com/application/o/authorize/"
            - name: GF_AUTH_GENERIC_OAUTH_TOKEN_URL
              value: "https://auth.gavriliu.com/application/o/token/"
            - name: GF_AUTH_GENERIC_OAUTH_API_URL
              value: "https://auth.gavriliu.com/application/o/userinfo/"
            - name: GF_AUTH_SIGNOUT_REDIRECT_URL
              value: "https://auth.gavriliu.com/application/o/<application_slug>/end-session/"
            - name: GF_SERVER_ROOT_URL
              value: "https://grafana.gavriliu.com"
            - name: GF_AUTH_OAUTH_AUTO_LOGIN
              value: "true"
            - name: GF_AUTH_OAUTH_ALLOW_INSECURE_EMAIL_LOOKUP
              value: "true"
            - name: GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH
              value: "contains(groups, 'Grafana Admins') && 'Admin' || contains(groups, 'Grafana Editors') && 'Editor' || 'Viewer'"
            - name: GF_SERVER_ROOT_URL
              value: "https://grafana.gavriliu.com"
            - name: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: grafana
                  key: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana
      volumes:
        - name: grafana
          persistentVolumeClaim:
            claimName: grafana